<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                              http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.wattdepot3</groupId>
    <artifactId>WattDepot-redesign</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <name>Multi Project WattDepot3</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <targetJdk>1.7</targetJdk>

        <!-- Dependency Versions -->
        <commons-cli.version>1.2</commons-cli.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-logging.version>1.1.3</commons-logging.version>
        <concurrent.version>1.0</concurrent.version>
        <dbcp.version>1.4</dbcp.version>
        <tomcat.jdbc.version>7.0.42</tomcat.jdbc.version>
        <google-collections.version>1.0-rc2</google-collections.version>
        <google-visualization-java.version>1.0.2</google-visualization-java.version>
        <h2.version>1.2.145</h2.version>
        <hibernate.version>3.2.6.ga</hibernate.version>
        <hibernate-annotations.version>3.3.1.GA</hibernate-annotations.version>
        <hibernate-core.version>4.2.4.Final</hibernate-core.version>
        <httpunit.version>1.7</httpunit.version>
        <icu4j.version>51.2</icu4j.version>
        <jcs.version>1.3</jcs.version>
        <json.version>20090211</json.version>
        <junit.version>4.11</junit.version>
        <modbus-jamod.version>1.2</modbus-jamod.version>
        <opencsv.version>2.3</opencsv.version>
        <pool.version>1.6</pool.version>
        <restlet.version>2.1.2</restlet.version>

        <!-- Maven Plugin Versions -->
        <antrun.plugin.version>1.7</antrun.plugin.version>
        <appassembler.plugin.version>1.3.1</appassembler.plugin.version>
        <assembly.plugin.version>2.4</assembly.plugin.version>
        <checkstyle.plugin.version>2.10</checkstyle.plugin.version>
        <dependency.plugin.version>2.8</dependency.plugin.version>
        <findbugs.plugin.version>2.5.2</findbugs.plugin.version>
        <javadoc.plugin.version>2.9.1</javadoc.plugin.version>
        <pmd.plugin.version>2.6</pmd.plugin.version>
        <site.plugin.version>3.3</site.plugin.version>
        <surefire.plugin.version>2.15</surefire.plugin.version>

        <config.dir>${basedir}</config.dir>
        <findbugs.filter.file>${config.dir}/findbugs.exclude.xml</findbugs.filter.file>
        <checkstyle.filter.file>${config.dir}/checkstyle.xml</checkstyle.filter.file>
    </properties>
    <dependencies>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${dbcp.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>${commons-logging.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${pool.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.collections</groupId>
            <artifactId>google-collections</artifactId>
            <version>${google-collections.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.visualization</groupId>
            <artifactId>visualization-datasource</artifactId>
            <version>${google-visualization-java.version}</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ibm.icu</groupId>
            <artifactId>icu4j</artifactId>
            <version>${icu4j.version}</version>
        </dependency>
        <dependency>
            <groupId>httpunit</groupId>
            <artifactId>httpunit</artifactId>
            <version>${httpunit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>${opencsv.version}</version>
        </dependency>
        <dependency>
            <groupId>net.wimpi.modbus</groupId>
            <artifactId>jamod</artifactId>
            <version>${modbus-jamod.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jcs</groupId>
            <artifactId>jcs</artifactId>
            <version>${jcs.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <version>${tomcat.jdbc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>org.restlet.jse</groupId>
            <artifactId>org.restlet</artifactId>
            <version>${restlet.version}</version>
        </dependency>
        <dependency>
            <groupId>org.restlet.jse</groupId>
            <artifactId>org.restlet.ext.httpclient</artifactId>
            <version>${restlet.version}</version>
        </dependency>
        <dependency>
            <groupId>org.restlet.jse</groupId>
            <artifactId>org.restlet.ext.jetty</artifactId>
            <version>${restlet.version}</version>
        </dependency>
        <dependency>
            <groupId>org.restlet.jse</groupId>
            <artifactId>org.restlet.ext.jackson</artifactId>
            <version>${restlet.version}</version>
        </dependency>
        <dependency>
            <groupId>org.restlet.jse</groupId>
            <artifactId>org.restlet.ext.xstream</artifactId>
            <version>${restlet.version}</version>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven-restlet</id>
            <name>Public online Restlet repository</name>
            <url>http://maven.restlet.org</url>
        </repository>
        <repository>
            <id>local-repo</id>
            <name>Local repository that contains modbus</name>
            <url>file://${project.basedir}/repository</url>
        </repository>
    </repositories>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
        </plugins>
    </reporting>
    <build>
        <defaultGoal>verify</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <!-- Run JUnit tests during "test" phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/TestDb*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- Run QA tools during "test" phase -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs.plugin.version}</version>
                <configuration>
                    <excludeFilterFile>${findbugs.filter.file}</excludeFilterFile>
                    <excludes>
                        <exclude>**/datamodel/**</exclude>
                        <exclude>**/tinker/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.plugin.version}</version>
                <configuration>
                    <configLocation>${checkstyle.filter.file}</configLocation>
                    <excludes>**/datamodel/**
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${pmd.plugin.version}</version>
                <configuration>
                    <targetJdk>${targetJdk}</targetJdk>
                    <linkXref>false</linkXref>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <excludes>
                        <exclude>**/datamodel/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${javadoc.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>javadoc</goal>
                            <goal>test-javadoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Run QA & Reporting tools during "site" phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${site.plugin.version}</version>
                <configuration>
                    <reportPlugins>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>findbugs-maven-plugin</artifactId>
                            <version>${findbugs.plugin.version}</version>
                            <configuration>
                                <excludeFilterFile>${findbugs.filter.file}</excludeFilterFile>
                                <excludes>
                                    <exclude>**/datamodel/**</exclude>
                                    <exclude>**/tinker/**</exclude>
                                </excludes>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <version>${checkstyle.plugin.version}</version>
                            <configuration>
                                <configLocation>${checkstyle.filter.file}</configLocation>
                                <excludes>**/datamodel/**, **/tinker/**</excludes>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-pmd-plugin</artifactId>
                            <version>${pmd.plugin.version}</version>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>pmd</report>
                                        <report>cpd</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                            <configuration>
                                <targetJdk>${targetJdk}</targetJdk>
                                <linkXref>false</linkXref>
                                <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                                <minimumTokens>100</minimumTokens>
                                <excludes>
                                    <exclude>**/tinker/**</exclude>
                                    <exclude>**/datamodel/**</exclude>
                                </excludes>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>${javadoc.plugin.version}</version>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>
            <!-- Ant tasks from anttasks.xml. These could be ported to Maven, 
                but I haven't taken the time to do it. -->
            <!-- <plugin> <artifactId>maven-antrun-plugin</artifactId> <version>${antrun.plugin.version}</version> 
                <executions> Create jars during "package" phase <execution> <id>jar</id> 
                <phase>package</phase> <configuration> <tasks> <ant antfile="${config.dir}/anttasks.build.xml" 
                target="jar-standalone"/> </tasks> </configuration> <goals> <goal>run</goal> 
                </goals> </execution> Autogenerate jaxb classes, destroying any custom code 
                in those classes. This is not part of any phase, but can be called with "mvn 
                antrun:run execution:jaxb" I haven't tested this, so no guarantees on whether 
                it works or not. <execution> <id>jaxb</id> <phase/> <configuration> <tasks> 
                <ant antfile="${config.dir}/anttasks.build.xml" target="jar-standalone"/> 
                </tasks> </configuration> <goals> <goal>run</goal> </goals> </execution> 
                </executions> </plugin> -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${dependency.plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Create distribution during "package" phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <manifestEntries>
                                <Main-Class>org.wattdepot.server.Server</Main-Class>
                                <Build-Number>${project.version}</Build-Number>
                            </manifestEntries>
                        </transformer>
                    </transformers>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> 
                <version>${assembly.plugin.version}</version> <executions> <execution> <id>full-jar</id> 
                <phase>package</phase> <goals><goal>single</goal></goals> <configuration> 
                <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> </descriptorRefs> 
                <archive> <manifest> <addDefaultImplementationEntries>true</addDefaultImplementationEntries> 
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries> <addClasspath>true</addClasspath> 
                </manifest> </archive> </configuration> </execution> zip source <execution> 
                <id>source</id> <phase>package</phase> <goals><goal>single</goal></goals> 
                <configuration> <finalName>${project.artifactId}</finalName> <outputDirectory>${project.build.directory}/jar</outputDirectory> 
                <formats><format>zip</format></formats> <descriptorRefs> <descriptorRef>src</descriptorRef> 
                </descriptorRefs> </configuration> </execution> zip javadocs <execution> 
                <id>javadoc</id> <phase>package</phase> <goals><goal>single</goal></goals> 
                <configuration> <finalName>${project.artifactId}</finalName> <outputDirectory>${project.build.directory}/jar</outputDirectory> 
                <formats><format>zip</format></formats> <descriptors><descriptor>${config.dir}/javadoc-assembly.xml</descriptor></descriptors> 
                </configuration> </execution> zip project <execution> <id>dist</id> <phase>package</phase> 
                <goals><goal>single</goal></goals> <configuration> <finalName>${project.artifactId}-${project.version}</finalName> 
                <outputDirectory>${project.build.directory}/dist</outputDirectory> <formats><format>zip</format></formats> 
                <filters> <filter>.git/**</filter> </filters> <descriptors> <descriptor>${config.dir}/distribution-assembly.xml</descriptor> 
                </descriptors> </configuration> </execution> </executions> </plugin> -->
            <!-- Package it up for Heroku during "package" phase -->
            <plugin>
                <groupId>org.codehaus.mojo
			</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>${appassembler.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>assemble</goal>
                        </goals>
                        <configuration>
                            <assembleDirectory>target</assembleDirectory>
                            <programs>
                                <program>
                                    <mainClass>org.wattdepot.server.Server</mainClass>
                                    <name>webapp</name>
                                </program>
                            </programs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <organization>
        <name>Collaborative Software Development Laboratory</name>
        <url>http://csdl.ics.hawaii.edu</url>
    </organization>
    <issueManagement>
        <url>https://github.com/csdl/wattdepot/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>
    <description>WattDepot is an open source, RESTful web service that collects electricity data (such as current power utilization or cumulative power utilization) from meters and stores it in a database.</description>
    <modules>
        <module>wattdepot-core</module>
    <module>wattdepot-server</module>
    <module>wattdepot-client</module>
  </modules>
</project>